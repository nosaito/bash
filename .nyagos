-- This is a sample .nyagos written with Lua.
-- Edit and put it on %USERPROFILE% or %HOME%

-- Simple Prompt for CMD.EXE
-- set environment

common_dir  = 'C:\\Utility'
primary_dir = '../../../../Primary'

set {
    --PROMPT='$L'.. nyagos.getenv('COMPUTERNAME') .. ':$P$G$_$$$s'
    --PROMPT='%M[\!] %S%~%s%L % '
    --PROMPT='[$P]$_$$ ',
    --PROMPT="\x1b[42;30m[$P]\x1b[0m$_\x1b[43;30m$$\x1b[0m$s"
      PROMPT='[$P] > ',
    --PATH = nyagos.getenv('PATH') .. ';C:\Python27\;C:\Python27\Scripts',
    --PATH = 'C:\\Utility\\Program\\Python35;C:\\Utility\\Program\\Python35\\Scripts;' .. nyagos.getenv('PATH') ,
    --PATH = nyagos.getenv('PATH') .. ';' .. common_dir .. '\\Program\\MinGW\\msys\\1.0\\bin',
      PATH = nyagos.getenv('PATH') .. ';C:\\Utility\\Program\\MinGW\\msys\\1.0\\bin',
      PATH = nyagos.getenv('PATH') .. ';C:\\Utility\\Program\\python3;C:\\Utility\\Program\\python3\\Scripts',
    --PATH = nyagos.getenv('PATH') .. ';C:\\MTApps\\PERL\\5.10.0\\Prod\\Bin',
      HTTP_PROXY  = 'http://goproxy.micron.com:8080',
      HTTPS_PROXY = 'http://goproxy.micron.com:8080',
}

-- probably following is availabe to add path
-- addpath "C:\\MTApps\\PERL\\5.10.0\\Prod\\Bin"


-- Coloring Prompt for NYAGOS.exe ver.4.0 --
--local prompter=nyagos.prompt
--nyagos.prompt = function(this)
--    return prompter('$e[36;40;1m'..this..'$e[37;1m')
--end

-- Coloring Prompt for NYAGOS.exe ver.4.1 --
--nyagos.env.prompt='[$P] %  '
share.org_prompter=nyagos.prompt
nyagos.prompt = function(this)
    return share.org_prompter('$e[36;40;1m'..this..'$e[37;1m')
end


-- vim:set ft=lua: --

--set PROMPT="$e[32m$e[1m$w$e[0m>>$e[0m "
--set PROMPT= '%M[\!] %S%~%s%L % '


local MSYS=[[C:\Utility\Program\MinGW\msys\1.0\bin]]


alias{
    --ls='ls -oF $*',
    --ll="ls -l",
    ls=MSYS..[[\ls.exe --color=auto --show-control-chars]],
    ll=MSYS..[[\ls.exe -agoFh --time-style=+"%Y/%m/%d %H:%M" --color=auto --show-control-chars]],

    lua_e=function(args) assert(load(args[1]))() end,
    ["for"]='%COMSPEC% /c "@set PROMPT=$G & @for $*"',
    find = MSYS..[[\find.exe]],
    sjis = "nkf.exe -s",
    git  = "git --no-pager",
	e    = primary_dir .. "/Editor/sakura/sakura.exe",
	kate = primary_dir .. "/Editor/sakura/sakura.exe",
	edit = primary_dir .. "/Editor/sakura/sakura.exe",
	ee   = "~/../../../Atom/atom.exe",
	eee  = "~/../../../SublimeText3/sublime_text.exe",

	open = "explorer %CD% &",
}


--
-- set suffix setting ---
--

suffix.pl="perl"
if nyagos.which("ipy") then
  suffix.py="ipy"
elseif nyagos.which("py") then
  suffix.py="py"
else
  suffix.py="python"
end
suffix.rb="ruby"
suffix.lua="lua"
suffix.awk={"awk","-f"}
suffix.js={"cscript","//nologo"}
suffix.vbs={"cscript","//nologo"}
suffix.ps1={"powershell","-file"}

--
-- keybind
--

nyagos.bindkey("C_O",
    function(this)
        search_history(this, false)
    end
)

nyagos.bindkey("C_P",
    function(this)
        search_history(this, true)
    end
)
-- CTRL-A
nyagos.bindkey("C_A",
    function(this)
        previous_word(this)
    end
)
-- CTRL-Z
nyagos.bindkey("C_Z",
    function(this)
        forward_word(this)
    end
)


function previous_word(this)
    local pos = (this.text:sub(1,this.pos-1)):match'.*() '
    if pos and (pos < this.pos) then
        for i = 1, this.pos-pos do
            this:call("BACKWARD_CHAR")
        end
    else
        this:call("BEGINNING_OF_LINE")
    end
    return nil
end


function forward_word(this)
    local pos = this.text:find(' ',this.pos+1)
    if pos and (pos > this.pos) then
        for i = 1, pos-this.pos do
            this:call("FORWARD_CHAR")
        end
    else
        this:call("END_OF_LINE")
    end
    return nil
end


function search_history(this, is_prev)
    -- カーソル位置が一番左の場合は通常のnext/prev
    if this.pos == 1 then
        if is_prev == true then
            this:call("PREVIOUS_HISTORY")
        else
            this:call("NEXT_HISTORY")
        end
        this:call("BEGINNING_OF_LINE")
        return nil
    end

    -- 検索キーワード
    local search_string = this.text:sub(1, this.pos - 1)

    -- 重複を除いたhistoryリストの取得
    local history_uniq = {}
    local is_duplicated = false
    local hist_len = nyagos.gethistory()
    for i = 1, hist_len do
        local history
        -- 新しい履歴がリスト後ろに残るよう末尾からサーチ
        history = nyagos.gethistory(hist_len - i)
        for i, e in ipairs(history_uniq) do
            if history == e or history == search_string then
                is_duplicated = true
            end
        end
        if is_duplicated == false then
            if is_prev == true then
                table.insert(history_uniq, history)
            else
                table.insert(history_uniq, 1, history)
            end
        end
        is_duplicated = false
    end

    -- 入力と完全一致する履歴を探す
    -- 完全一致する履歴を起点にすることで
    -- (見かけ上)インクリメンタルな検索にする
    local hist_pos = 0
    for i, e in ipairs(history_uniq) do
        if e == this.text then
            hist_pos = i
            break
        end
    end

    -- 前方一致する履歴を探す
    local matched_string = nil
    for i = hist_pos + 1, #history_uniq do
        if history_uniq[i]:match('^' .. search_string .. '.*') then
            matched_string = history_uniq[i]
            break
        end
    end

    -- 見つかった履歴を出力
    -- 見つからなければ、検索キーワードを出力
    this:call("KILL_WHOLE_LINE")
    if (matched_string ~= nil) then
        this:insert(matched_string)
    else
        this:insert(search_string)
    end
    this:call("BEGINNING_OF_LINE")
    for i = 1, this.pos - 1 do
        this:call("FORWARD_CHAR")
    end
end
